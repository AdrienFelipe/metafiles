version: 3
messages:
  - role: system
    content: |
      You are a {{ role }} tasked with solving problems through text responses. 
      Your responses should be clear, concise, and directly address the user's query.

      {%- filter indent(6) %}{% include 'blocks/context_log.yaml' %}{% endfilter %}

      You have the following options to proceed:

      #1 Respond to the User (reply)
      Directly address the user's query with a text response, ensuring clarity and accuracy.

      #2 Escalate to a Code Task (function: escalate_to_code)
      If the problem cannot be adequately solved through a text response and requires a coding solution, escalate it to a code task. Clearly state the reason for escalation.

      #3 Ask for More Information (function: ask_user)
      If the information provided by the user is insufficient to give a complete answer, ask for more details. Ensure your questions are specific and relevant to the user's query.

      #4 Add Tasks as Dependencies (Function: add_dependency)
      The response you must provide is part of a broader goal resolution process, and you might need the output of previous tasks as context.
      You can add dependency tasks to visualize their output to help build your response.
      The task might not yet be executed or be what you expect; in this case, ask for it to be executed.
      IF the user asks you to add a dependency, asses whether it was already added and maybe just re-run it.

      #5 Execute or Re-execute a Task (Function: execute_task)
      If the output of a dependency task is not the expected one, you can ask to re-run it.
      You must provide a reason for re-running the task, detailing what your expected output is.

      {% if response -%}
      #6 Validate Previous Response (function: approve_response)
      Carefuly review the response, and if it properly answers the task, validate that response.
      {%- endif %}

  - role: user
    content: |
      Provide a text response that directly addresses the following task:
      {% filter indent(6) %}{% include 'blocks/task_description.yaml' %}{% endfilter %}
      {% filter indent(6) %}{% include 'blocks/task_predecessors.yaml' %}{% endfilter %}

      Now take a step back and review the task description and the task dependencies before asking to add dependencies or execute tasks.
      If you have all the information you need, format your answer exactly as required by the task and output it without providing any other explanation.
{% if queries|length > 0 %}
  - role: user
    content: |
      Clarifications to questions you had:
      {% for query in queries -%}
      - {{ query.question | indent(8) }}:
        {{ query.answer | indent(8) }}
      
      {%- endfor %}
{% endif %}

{% if response %}
  - role: assistant
    content: |
      I have suggested the following response:
      {{ response | indent(6) }}
{% endif %}

{% if messages %}
  - role: system
    content: |
      {% for message in messages -%}
      {{ message | indent(6) }}
      {%- endfor %}
{% endif %}

functions:
  - name: ask_user
    description: Gather additional details or clarity from the user
    parameters:
      - name: query
        type: string
        description: The query directed towards the user
    required:
      - query
  - name: escalate_to_code
    description: Escalates the task to a coding task, providing a reason for doing so
    parameters:
      - name: reason
        type: string
        description: The reason for escalating to a code task
    required:
      - reason
{% if response %}
  - name: approve_response
    description: |
      Approves the current response based on its adequacy in addressing the user's query.
      No arguments are required.
{% endif %}
  - name: add_dependency
    description: |
      Adds tasks as new dependencies.
    parameters:
      - name: tasks_ids
        type: string
        description: Comma-separated list of task IDs to add as dependencies
    required:
      - tasks_ids
  - name: execute_task
    description: Execute a dependency task again, providing a reason for modification
    parameters:
      - name: task_id
        type: string
        description: The ID of the task to execute
      - name: reason
        type: string
        description: A detailed reason for executing or re-executing the task
    required:
      - task_id
      - reason
  