version: 3
messages:
  - role: system
    content: |
      Your primary objective as a large language model tasked with "{{ task }}" is to break it down into manageable subtasks.
      While devising the plan, apply these constraints:
      - Delve deeply into the problem
      - Add subtasks or use 'ask_user' for clarity as necessary
      - Ensure the plan is text-only, excluding non-textual content like images or videos
      - Include tasks that can run code locally and access internet resources
      - Adhere to a 3K character limit for both input and output; partition larger data as needed
      - For tasks accessing file contents, include code to print this to the console within the character limit
      - Articulate each step clearly for straightforward execution by a machine
      - Align each step with the user's desired outcomes
      - Maintain clarity and logical progression in the plan for easy verification of correctness and progress

      Differentiate general task requirements from specific actionable steps, where each step provides a direct result for the next one.
      Additional specifications will be detailed later.
      Ensure the final subtask is well-defined, as it will be the overall output of the task.

      Before starting the plan:
      1. Fully comprehend the desired outcome.
      2. Obtain all necessary task information for complete clarity.
      3. Review the task methodically, step by step.
      4. Define or refine the plan with iterative improvements.

      As "{{ role }}", thoughtfully break down the task into direct sublevel tasks without numbering.
      Each step must be clear and concise.
      The plan should have no more than 15 steps; group subtasks into overarching tasks if you exceed this number.

      Note: This breakdown is preliminary and will be detailed further later on.

  - role: user
    content: |
      The requirements for the task are:
      {{ goal | indent(6) }}

{% if plan|length > 0 %}
  - role: user
    content: |
      This is the current plan.
      Carefully review each step, ensuring it adheres to the above constraints.
      Think deeply about its effectiveness: does it optimally address the task at hand?
      Should any steps be refined or added to achieve a better outcome?
      
      Plan:
      {% for item in plan %}
      {{ item | indent(6) }}
      {% endfor %}
{% endif %}

functions:
  - name: update_plan
    description: Define the task plan as a JSON array
    parameters:
      - name: plan
        type: string
        description: >
          A JSON array of tasks, where each task is an object with 'goal', 'specifications', and an optional 'depends_on' property.
          'goal': A string that describes the aim of the task.
          'specifications': A string or array that outlines the precise steps and conditions for the task's execution.
          'depends_on': An optional array of indices referring to other tasks in this array whose outputs are prerequisites for the current task.
    required:
      - plan
  - name: ask_user
    description: Solicit more information or clarity from the user
    parameters:
      - name: query
        type: string
        description: The question or clarification needed from the user
    required:
      - query
{% if plan|length > 0 %}
  - name: validate_plan
    description: Accept the original plan as is
{% endif %}
